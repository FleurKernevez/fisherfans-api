"openapi": "3.1.0"
"info":
  "title": "Fisher Fans"
  "description": "The purpose of this application is to share places on a boat for fishing or spearfishing trips, to rent and reserve boats and to manage a fishing log."
  "termsOfService": "https://www.fisherFans.org/api-terms-of-use"
  "contact":
    "name": "Fisher Fans api"
    "url": "https://www.fisherFans.org/about/staying-in-touch"
    "email": "contact@fisherFansapi.com"
  "license":
    "name": "Apache 2.0"
    "url": "http://www.apache.org/licenses/LICENSE-2.0.html"
  "version": "3"
"servers":
  - "url": "https://api.fisherFans.org/v1"
    "description": "Production server"
  - "url": "https://api.fisherFans.staging.org/v1"
    "description": "Staging server"
  - "url": "https://api.fisherFans.development.org/v1"
    "description": "Development server"
    # rajouter "date", "date-time", "enum"
"paths":
  "/user":
    "post":
      "tags":
        - "User"
      "summary": "Create"
      "description": "Create a new User"
      "operationId": "create-user"
      "parameters":
        - "name": "Email"
          "in": "query"
          "schema":
            "type": "string"
        - "name": "Password"
          "in": "query"
          "schema":
            "type": "string"
        - "name": "Lastname"
          "in": "query"
          "schema":
            "type": "string"
        - "name": "FirstName"
          "in": "query"
          "schema":
            "type": "string"
        - "name": "Birthdate"
          "in": "query"
          "schema":
            "type": "string"
            "format": "date"
        - "name": "PhoneNumber"
          "in": "query"
          "schema":
            "type": "string"
        - "name": "Address"
          "in": "query"
          "schema":
            "type": "string"
        - "name": "PostalCode"
          "in": "query"
          "schema":
            "type": "string"
        - "name": "City"
          "in": "query"
          "schema":
            "type": "string"
        - "name": "LanguagesSpoken"
          "in": "query"
          "schema":
            "type": "array"
        - "name": "UrlUserPicture"
          "in": "query"
          "schema":
            "type": "string"
        - "name": "BoatLicenceNumber"
          "in": "query"
          "schema":
            "type": "string"
        - "name": "InsuranceNumber"
          "in": "query"
          "schema":
            "type": "string"
        - "name": "Status"
          "in": "query"
          "schema":
            "type": "string"
            "enum": 
              - Particulier
              - Professionnel
        - "name": "CompanyName"
          "in": "query"
          "schema":
            "type": "string"
        - "name": "ActivityType"
          "in": "query"
          "schema":
            "type": "string"
            "enum": 
              - Location
              - Guide de pêche
        - "name": "SIRETNumber"
          "in": "query"
          "schema":
            "type": "string"
        - "name": "RCNumber"
          "in": "query"
          "schema":
            "type": "string"
        - "name": "BoatsList"
          "in": "query"
          "schema":
            "type": "array"
        - "name": "FishingBook"
          "in": "query"
          "schema":
            "type": "array"
        - "name": "BoatTripsList"
          "in": "query"
          "schema":
            "type": "array"
        - "name": "ReservationsList"
          "in": "query"
          "schema":
            "type": "array"
      responses:
        '200':
          description: Successful create new User
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/User'
        '400':
          description: Invalid ID supplied
        '422':
          description: Server was unable to carry out the requested instructions.
  "/user/{id}":
    "get":
      "tags":
        - "User"
      "summary": "AllDatas"
      "description": "Returns all datas about user ID."
      "operationId": "user-datas"
      "parameters":
        - "name": "id"
          "in": "path"
          "schema":
            "type": "integer"
            "format": "int32"
          "required": true
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/User'
        '400':
          description: Invalid ID supplied
        '404':
          description: User not found
        '422':
          description: Server was unable to carry out the requested instructions.
    "delete":
      "tags":
        - "User"
      "summary": "Delete"
      "description": "Delete user"
      "operationId": "delete-user"
      "parameters":
        - "name": "id"
          "in": "path"
          "schema":
            "type": "integer"
            "format": "int32"
          "required": true
      responses:
        '200':
          description: Successful operation
        '400':
          description: Invalid ID supplied
        '404':
          description: User not found
        '422':
          description: Server was unable to carry out the requested instructions.
    "patch":
      "tags":
        - "User"
      "summary": "MAJ"
      "description": "Mise à jour des données de l'utilisateur"
      "operationId": "maj-datas-user"
      "parameters":
        - "name": "id"
          "in": "path"
          "schema":
            "type": "integer"
            "format": "int32"
          "required": true
        - "name": "Lastname"
          "in": "query"
          "schema":
            "type": "string"
        - "name": "FirstName"
          "in": "query"
          "schema":
            "type": "string"
        - "name": "Birthdate"
          "in": "query"
          "schema":
            "type": "string"
        - "name": "PhoneNumber"
          "in": "query"
          "schema":
            "type": "string"
        - "name": "Address"
          "in": "query"
          "schema":
            "type": "string"
        - "name": "PostalCode"
          "in": "query"
          "schema":
            "type": "string"
        - "name": "City"
          "in": "query"
          "schema":
            "type": "string"
        - "name": "LanguagesSpoken"
          "in": "query"
          "schema":
            "type": "array"
        - "name": "UrlUserPicture"
          "in": "query"
          "schema":
            "type": "string"
        - "name": "BoatLicenceNumber"
          "in": "query"
          "schema":
            "type": "string"
        - "name": "InsuranceNumber"
          "in": "query"
          "schema":
            "type": "string"
        - "name": "Status"
          "in": "query"
          "schema":
            "type": "string"
        - "name": "CompanyName"
          "in": "query"
          "schema":
            "type": "string"
        - "name": "ActivityType"
          "in": "query"
          "schema":
            "type": "string"
        - "name": "SIRETNumber"
          "in": "query"
          "schema":
            "type": "string"
        - "name": "RCNumber"
          "in": "query"
          "schema":
            "type": "string"
        - "name": "BoatsList"
          "in": "query"
          "schema":
            "type": "array"
        - "name": "FishingBook"
          "in": "query"
          "schema":
            "type": "array"
        - "name": "BoatTripsList"
          "in": "query"
          "schema":
            "type": "array"
        - "name": "ReservationsList"
          "in": "query"
          "schema":
            "type": "array"
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/User'
        '400':
          description: Invalid ID supplied
        '404':
          description: user not found
        '422':
          description: Server was unable to carry out the requested instructions.
    "put":
      "tags":
        - "User"
      "summary": "MAJ"
      "description": "Mise à jour des données de l'utilisateur"
      "operationId": "maj-user"
      "parameters":
        - "name": "id"
          "in": "path"
          "schema":
            "type": "integer"
            "format": "int32"
          "required": true
        - "name": "Lastname"
          "in": "query"
          "schema":
            "type": "string"
        - "name": "FirstName"
          "in": "query"
          "schema":
            "type": "string"
        - "name": "Birthdate"
          "in": "query"
          "schema":
            "type": "string"
        - "name": "PhoneNumber"
          "in": "query"
          "schema":
            "type": "string"
        - "name": "Address"
          "in": "query"
          "schema":
            "type": "string"
        - "name": "PostalCode"
          "in": "query"
          "schema":
            "type": "string"
        - "name": "City"
          "in": "query"
          "schema":
            "type": "string"
        - "name": "LanguagesSpoken"
          "in": "query"
          "schema":
            "type": "array"
        - "name": "UrlUserPicture"
          "in": "query"
          "schema":
            "type": "string"
        - "name": "BoatLicenceNumber"
          "in": "query"
          "schema":
            "type": "string"
        - "name": "InsuranceNumber"
          "in": "query"
          "schema":
            "type": "string"
        - "name": "Status"
          "in": "query"
          "schema":
            "type": "string"
        - "name": "CompanyName"
          "in": "query"
          "schema":
            "type": "string"
        - "name": "ActivityType"
          "in": "query"
          "schema":
            "type": "string"
        - "name": "SIRETNumber"
          "in": "query"
          "schema":
            "type": "string"
        - "name": "RCNumber"
          "in": "query"
          "schema":
            "type": "string"
        - "name": "BoatsList"
          "in": "query"
          "schema":
            "type": "array"
        - "name": "FishingBook"
          "in": "query"
          "schema":
            "type": "array"
        - "name": "BoatTripsList"
          "in": "query"
          "schema":
            "type": "array"
        - "name": "ReservationsList"
          "in": "query"
          "schema":
            "type": "array"
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/User'
        '400':
          description: Invalid ID supplied
        '404':
          description: user not found
        '422':
          description: Server was unable to carry out the requested instructions.
  "/boat/{Latitude}{Longitude}":
    "get":
      "tags":
        - "Boat"
      "summary": "Get"
      "description": "Get boats inside latitude and longitude"
      "operationId": "get-boats-between-latitude-and-longitude"
      "parameters":
        - "name": "Latitude"
          "in": "path"
          "schema":
            "type": "string"
          "required": true
        - "name": "Longitude"
          "in": "path"
          "schema":
            "type": "string"
          "required": true
      responses:
        '200':
          description: Successful update
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Boat'
        '400':
          description: Invalid ID supplied
        '404':
          description: Ship not found
        '422':
          description: Server was unable to carry out the requested instructions.
  "/boat":
    "post":
      "tags":
        - "Boat"
      "summary": "Create"
      "description": "Create new boat"
      "operationId": "create-boat"
      "parameters":
        - "name": "Name"
          "in": "query"
          "schema":
            "type": "string"
        - "name": "Description"
          "in": "query"
          "schema":
            "type": "string"
        - "name": "Brand"
          "in": "query"
          "schema":
            "type": "string"
        - "name": "ProductionYear"
          "in": "query"
          "schema":
            "type": "integer"
            "format": "int32"
        - "name": "UrlBoatPicture"
          "in": "query"
          "schema":
            "type": "string"
        - "name": "LicenseType"
          "in": "query"
          "schema":
            "type": "string"
        - "name": "Type"
          "in": "query"
          "schema":
            "type": "string"
        - "name": "Equipements"
          "in": "query"
          "schema":
            "type": "array"
        - "name": "CautionAmount"
          "in": "query"
          "schema":
            "type": "number"
            "format": "float"
        - "name": "CapacityMax"
          "in": "query"
          "schema":
            "type": "integer"
            "format": "int32"
        - "name": "BedsNumber"
          "in": "query"
          "schema":
            "type": "integer"
            "format": "int32"
        - "name": "HomePort"
          "in": "query"
          "schema":
            "type": "string"
        - "name": "Latitude"
          "in": "query"
          "schema":
            "type": "string"
        - "name": "Longitude"
          "in": "query"
          "schema":
            "type": "string"
        - "name": "EgineType"
          "in": "query"
          "schema":
            "type": "string"
        - "name": "EginePower"
          "in": "query"
          "schema":
            "type": "integer"
            "format": "int32"
        - "name": "BoatLicenceNumber"
          "in": "query"
          "schema": 
            "type": "string"
          required: true
      responses:
        '200':
          description: Register new ship successful
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Boat'
        '422':
          description: Server was unable to carry out the requested instructions.
    "get":
      "tags":
        - "Boat"
      "summary": "Get"
      "description": "Get a Boat"
      "operationId": "get-boat"
      "parameters":
        - "name": "Latitude"
          "in": "query"
          "schema":
            "type": "string"
        - "name": "Longitude"
          "in": "query"
          "schema":
            "type": "string"
      responses:
        '200':
          description: Successful recuperation des bateaux qui ont une longitude et latitude distincte
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Boat'
        '400':
          description: Invalid ID supplied
        '404':
          description: Boat not found
        '422':
          description: Server was unable to carry out the requested instructions.


  "/boat/{id}":
    "patch":
      "tags":
        - "Boat"
      "summary": "Update"
      "description": "Update values for about boat"
      "operationId": "update-boat-by-id"
      "parameters":
        - "name": "id"
          "in": "path"
          "schema":
            "type": "integer"
            "format": "int32"
          "required": true
        - "name": "Name"
          "in": "query"
          "schema":
            "type": "string"
        - "name": "Description"
          "in": "query"
          "schema":
            "type": "string"
        - "name": "Brand"
          "in": "query"
          "schema":
            "type": "string"
        - "name": "ProductionYear"
          "in": "query"
          "schema":
            "type": "integer"
            "format": "int32"
        - "name": "UrlBoatPicture"
          "in": "query"
          "schema":
            "type": "string"
        - "name": "LicenseType"
          "in": "query"
          "schema":
            "type": "string"
        - "name": "Type"
          "in": "query"
          "schema":
            "type": "string"
        - "name": "Equipements"
          "in": "query"
          "schema":
            "type": "array"
        - "name": "CautionAmount"
          "in": "query"
          "schema":
            "type": "number"
            "format": "float"
        - "name": "CapacityMax"
          "in": "query"
          "schema":
            "type": "integer"
            "format": "int32"
        - "name": "BedsNumber"
          "in": "query"
          "schema":
            "type": "integer"
            "format": "int32"
        - "name": "HomePort"
          "in": "query"
          "schema":
            "type": "string"
        - "name": "Latitude"
          "in": "query"
          "schema":
            "type": "string"
        - "name": "Longitude"
          "in": "query"
          "schema":
            "type": "string"
        - "name": "EgineType"
          "in": "query"
          "schema":
            "type": "string"
        - "name": "EginePower"
          "in": "query"
          "schema":
            "type": "integer"
            "format": "int32"
      responses:
        '200':
          description: Successful update
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Boat'
        '400':
          description: Invalid ID supplied
        '404':
          description: Ship not found
        '422':
          description: Server was unable to carry out the requested instructions.
    "put":
      "tags":
        - "Boat"
      "summary": "Update"
      "description": "Update values for about boat"
      "operationId": "update-boat"
      "parameters":
        - "name": "id"
          "in": "path"
          "schema":
            "type": "integer"
            "format": "int32"
          "required": true
        - "name": "Name"
          "in": "query"
          "schema":
            "type": "string"
        - "name": "Description"
          "in": "query"
          "schema":
            "type": "string"
        - "name": "Brand"
          "in": "query"
          "schema":
            "type": "string"
        - "name": "ProductionYear"
          "in": "query"
          "schema":
            "type": "integer"
            "format": "int32"
        - "name": "UrlBoatPicture"
          "in": "query"
          "schema":
            "type": "string"
        - "name": "LicenseType"
          "in": "query"
          "schema":
            "type": "string"
        - "name": "Type"
          "in": "query"
          "schema":
            "type": "string"
        - "name": "Equipements"
          "in": "query"
          "schema":
            "type": "array"
        - "name": "CautionAmount"
          "in": "query"
          "schema":
            "type": "number"
            "format": "float"
        - "name": "CapacityMax"
          "in": "query"
          "schema":
            "type": "integer"
            "format": "int32"
        - "name": "BedsNumber"
          "in": "query"
          "schema":
            "type": "integer"
            "format": "int32"
        - "name": "HomePort"
          "in": "query"
          "schema":
            "type": "string"
        - "name": "Latitude"
          "in": "query"
          "schema":
            "type": "string"
        - "name": "Longitude"
          "in": "query"
          "schema":
            "type": "string"
        - "name": "EgineType"
          "in": "query"
          "schema":
            "type": "string"
        - "name": "EginePower"
          "in": "query"
          "schema":
            "type": "integer"
            "format": "int32"
      responses:
        '200':
          description: Successful update
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Boat'
        '400':
          description: Invalid ID supplied
        '404':
          description: Ship not found
        '422':
          description: Server was unable to carry out the requested instructions.
    "delete":
      "tags":
        - "Boat"
      "summary": "Delete"
      "description": "Delete a boat"
      "operationId": "delete-boat"
      "parameters":
        - "name": "id"
          "in": "path"
          "schema":
            "type": "integer"
            "format": "int32"
          "required": true
      responses:
        '200':
          description: Successful delete Boat
        '400':
          description: Invalid ID supplied
        '404':
          description: Boat not found
        '422':
          description: Server was unable to carry out the requested instructions.
  "/reservation":
    "post":
      "tags":
        - "Reservation"
      "summary": "Create"
      "description": "Create new reservation"
      "operationId": "create-reservation"
      "parameters":
        - "name": "BoatTrip_id"
          "in": "query"
          "schema":
            "type": "integer"
            "format": "int32"
        - "name": "ChoosenDate"
          "in": "query"
          "schema":
            "type": "string"
        - "name": "SeatsBooked"
          "in": "query"
          "schema":
            "type": "integer"
            "format": "int32"
        - "name": "TotalPrice"
          "in": "query"
          "schema":
            "type": "number"
            "format": "float"
        - "name": "User_id"
          "in": "query"
          "schema":
            "type": "integer"
            "format": "int32"
      responses:
        '200':
          description: Successful creation of Reservation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Reservation'
        '422':
          description: Server was unable to carry out the requested instructions.
    "get":
      "tags":
        - "Reservation"
      "summary": "Get"
      "description": "Get a reservation"
      "operationId": "get-reservation"
      "parameters":
        - "name": "id"
          "in": "query"
          "schema":
            "type": "integer"
            "format": "int32"
        - "name": "BoatTrip_id"
          "in": "query"
          "schema":
            "type": "integer"
            "format": "int32"
        - "name": "ChoosenDate"
          "in": "query"
          "schema":
            "type": "string"
        - "name": "SeatsBooked"
          "in": "query"
          "schema":
            "type": "integer"
            "format": "int32"
        - "name": "TotalPrice"
          "in": "query"
          "schema":
            "type": "number"
            "format": "float"
        - "name": "User_id"
          "in": "query"
          "schema":
            "type": "integer"
            "format": "int32"
      responses:
        '200':
          description: Successful get detail of Reservation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Reservation'
        '422':
          description: Server was unable to carry out the requested instructions.
  "/reservation/{id}":
    "patch":
      "tags":
        - "Reservation"
      "summary": "Update"
      "description": "Update values for about reservation"
      "operationId": "update-by-id-reservation"
      "parameters":
        - "name": "id"
          "in": "path"
          "schema":
            "type": "integer"
            "format": "int32"
          "required": true
        - "name": "BoatTrip_id"
          "in": "query"
          "schema":
            "type": "integer"
            "format": "int32"
        - "name": "ChoosenDate"
          "in": "query"
          "schema":
            "type": "string"
        - "name": "SeatsBooked"
          "in": "query"
          "schema":
            "type": "integer"
            "format": "int32"
        - "name": "TotalPrice"
          "in": "query"
          "schema":
            "type": "number"
            "format": "float"
        - "name": "User_id"
          "in": "query"
          "schema":
            "type": "integer"
            "format": "int32"
      responses:
        '200':
          description: Successful update reservation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Reservation'
        '400':
          description: Invalid ID supplied
        '404':
          description: Reservation not found
        '422':
          description: Server was unable to carry out the requested instructions.
    "put":
      "tags":
        - "Reservation"
      "summary": "Update"
      "description": "Update values for about reservation"
      "operationId": "update-reservation"
      "parameters":
        - "name": "id"
          "in": "path"
          "schema":
            "type": "integer"
            "format": "int32"
          "required": true
        - "name": "BoatTrip_id"
          "in": "query"
          "schema":
            "type": "integer"
            "format": "int32"
        - "name": "ChoosenDate"
          "in": "query"
          "schema":
            "type": "string"
        - "name": "SeatsBooked"
          "in": "query"
          "schema":
            "type": "integer"
            "format": "int32"
        - "name": "TotalPrice"
          "in": "query"
          "schema":
            "type": "number"
            "format": "float"
        - "name": "User_id"
          "in": "query"
          "schema":
            "type": "integer"
            "format": "int32"
      responses:
        '200':
          description: Successful update reservation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Reservation'
        '400':
          description: Invalid ID supplied
        '404':
          description: Reservation not found
        '422':
          description: Server was unable to carry out the requested instructions.
    "delete":
      "tags":
        - "Reservation"
      "summary": "Delete"
      "description": "Delete a reservation"
      "operationId": "delete-reservation"
      "parameters":
        - "name": "id"
          "in": "path"
          "schema":
            "type": "integer"
            "format": "int32"
          "required": true
      responses:
        '200':
          description: Successful delete reservation
        '400':
          description: Invalid ID supplied
        '404':
          description: Reservation not found
        '422':
          description: Server was unable to carry out the requested instructions.
  "/fishingBook":
    "post":
      "tags":
        - "FishingBook"
      "summary": "Create"
      "description": "Create new fishing book"
      "operationId": "create-FishingBook"
      "parameters":
        - "name": "FishName"
          "in": "query"
          "schema":
            "type": "string"
        - "name": "UrlFishPicture"
          "in": "query"
          "schema":
            "type": "string"
        - "name": "Comment"
          "in": "query"
          "schema":
            "type": "string"
        - "name": "Size"
          "in": "query"
          "schema":
            "type": "number"
            "format": "double"
        - "name": "Weight"
          "in": "query"
          "schema":
            "type": "number"
            "format": "double"
        - "name": "FishingPlace"
          "in": "query"
          "schema":
            "type": "string"
        - "name": "FishingDate"
          "in": "query"
          "schema":
            "type": "string"
            "format": "date"
        - "name": "ReleasedFish"
          "in": "query"
          "schema":
            "type": "boolean"
        - "name": "User_id"
          "in": "query"
          "schema":
            "type": "integer"
            "format": "int32"
      responses:
        '200':
          description: Successful create new fishing book
        '422':
          description: Server was unable to carry out the requested instructions.
  "/fishingBook/{id}/{User_id}":
    "patch":
      "tags":
        - "FishingBook"
      "summary": "Update"
      "description": "Update fishing book by id page and id user"
      "operationId": "update-fishing-Book-by-id"
      "parameters":
        - "name": "id"
          "in": "path"
          "schema":
            "type": "integer"
            "format": "int32"
          "required": true
        - "name": "User_id"
          "in": "path"
          "schema":
            "type": "integer"
            "format": "int32"
          "required": true
      responses:
        '200':
          description: Successful update fishing book
        '400':
          description: Invalid ID supplied
        '404':
          description: FishingBook not found
        '422':
          description: Server was unable to carry out the requested instructions.
    "put":
      "tags":
        - "FishingBook"
      "summary": "Update"
      "description": "Update fishing book by id page and id user"
      "operationId": "update-fishingBook-by-id"
      "parameters":
        - "name": "id"
          "in": "path"
          "schema":
            "type": "integer"
            "format": "int32"
          "required": true
        - "name": "User_id"
          "in": "path"
          "schema":
            "type": "integer"
            "format": "int32"
          "required": true
      responses:
        '200':
          description: Successful update fishing book
        '400':
          description: Invalid ID supplied
        '404':
          description: FishingBook not found
        '422':
          description: Server was unable to carry out the requested instructions.
  "/fishingBook/{id}":
    "patch":
      "tags":
        - "FishingBook"
      "summary": "Update"
      "description": "Update values for about fishing book"
      "operationId": "update-Fishing-Book"
      "parameters":
        - "name": "id"
          "in": "path"
          "schema":
            "type": "integer"
            "format": "int32"
          "required": true
        - "name": "FishName"
          "in": "query"
          "schema":
            "type": "string"
        - "name": "UrlFishPicture"
          "in": "query"
          "schema":
            "type": "string"
        - "name": "Comment"
          "in": "query"
          "schema":
            "type": "string"
        - "name": "Size"
          "in": "query"
          "schema":
            "type": "number"
            "format": "double"
        - "name": "Weight"
          "in": "query"
          "schema":
            "type": "number"
            "format": "double"
        - "name": "FishingPlace"
          "in": "query"
          "schema":
            "type": "string"
        - "name": "FishingDate"
          "in": "query"
          "schema":
            "type": "string"
            "format": "date"
        - "name": "ReleasedFish"
          "in": "query"
          "schema":
            "type": "boolean"
        - "name": "User_id"
          "in": "query"
          "schema":
            "type": "integer"
            "format": "int32"
      responses:
        '200':
          description: Successful update fishing book
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/FishingBook'
        '400':
          description: Invalid ID supplied
        '404':
          description: Fishing book not found
        '422':
          description: Server was unable to carry out the requested instructions.
    "put":
      "tags":
        - "FishingBook"
      "summary": "Update"
      "description": "Update values for about fishing book"
      "operationId": "update-FishingBook"
      "parameters":
        - "name": "id"
          "in": "path"
          "schema":
            "type": "integer"
            "format": "int32"
          "required": true
        - "name": "FishName"
          "in": "query"
          "schema":
            "type": "string"
        - "name": "UrlFishPicture"
          "in": "query"
          "schema":
            "type": "string"
        - "name": "Comment"
          "in": "query"
          "schema":
            "type": "string"
        - "name": "Size"
          "in": "query"
          "schema":
            "type": "number"
            "format": "double"
        - "name": "Weight"
          "in": "query"
          "schema":
            "type": "number"
            "format": "double"
        - "name": "FishingPlace"
          "in": "query"
          "schema":
            "type": "string"
        - "name": "FishingDate"
          "in": "query"
          "schema":
            "type": "string"
            "format": "date"
        - "name": "ReleasedFish"
          "in": "query"
          "schema":
            "type": "boolean"
        - "name": "User_id"
          "in": "query"
          "schema":
            "type": "integer"
            "format": "int32"
      responses:
        '200':
          description: Successful update fishing book
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/FishingBook'
        '400':
          description: Invalid ID supplied
        '404':
          description: Fishing book not found
        '422':
          description: Server was unable to carry out the requested instructions.
    "delete":
      "tags":
        - "FishingBook"
      "summary": "Delete"
      "description": "Delete a fishing book"
      "operationId": "delete-FishingBook"
      "parameters":
        - "name": "id"
          "in": "path"
          "schema":
            "type": "integer"
            "format": "int32"
          "required": true
      responses:
        '200':
          description: Successful delete fishing book
        '400':
          description: Invalid ID supplied
        '404':
          description: Fishing Book not found
        '422':
          description: Server was unable to carry out the requested instructions.
  "/boatTrip":
    "post":
      "tags":
        - "BoatTrip"
      "summary": "Create"
      "description": "Create values for about a boat tri"
      "operationId": "create-boatTrip"
      "parameters":
        - "name": "Title"
          "in": "query"
          "schema":
            "type": "string"
        - "name": "PracticalInformations"
          "in": "query"
          "schema":
            "type": "string"
        - "name": "Type"
          "in": "query"
          "schema":
            "type": "string"
        - "name": "PriceType"
          "in": "query"
          "schema":
            "type": "string"
        - "name": "Dates"
          "in": "query"
          "schema":
            "type": "array"
            "format": "date"
        - "name": "Times"
          "in": "query"
          "schema":
            "type": "array"
            "format": "time"
        - "name": "PassengersNumber"
          "in": "query"
          "schema":
            "type": "integer"
            "format": "int32"
        - "name": "Price"
          "in": "query"
          "schema":
            "type": "number"
            "format": "double"
        - "name": "User_id"
          "in": "query"
          "schema":
            "type": "integer"
            "format": "int32"
          "required": true
        - "name": "Boat_id"
          "in": "query"
          "schema":
            "type": "integer"
            "format": "int32"
          "required": true
      responses:
        '200':
          description: Successful Create boat trip
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/BoatTrip'
        '422':
          description: Server was unable to carry out the requested instructions.
    "get":
      "tags":
        - "BoatTrip"
      "summary": "Get"
      "description": "Get values for about a boat tri"
      "operationId": "get-boatTrip"
      "parameters":
        - "name": "id"
          "in": "query"
          "schema":
            "type": "integer"
            "format": "int32"
        - "name": "Title"
          "in": "query"
          "schema":
            "type": "string"
        - "name": "PracticalInformations"
          "in": "query"
          "schema":
            "type": "string"
        - "name": "Type"
          "in": "query"
          "schema":
            "type": "string"
        - "name": "PriceType"
          "in": "query"
          "schema":
            "type": "string"
        - "name": "Dates"
          "in": "query"
          "schema":
            "type": "array"
        - "name": "Times"
          "in": "query"
          "schema":
            "type": "array"
        - "name": "PassengersNumber"
          "in": "query"
          "schema":
            "type": "integer"
            "format": "int32"
        - "name": "Price"
          "in": "query"
          "schema":
            "type": "number"
            "format": "double"
        - "name": "User_id"
          "in": "query"
          "schema":
            "type": "integer"
            "format": "int32"
          "required": true
        - "name": "Boat_id"
          "in": "query"
          "schema":
            "type": "integer"
            "format": "int32"
          "required": true
      responses:
        '200':
          description: Successful Create boat trip
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/BoatTrip'
        '422':
          description: Server was unable to carry out the requested instructions.
  "/boatTrip/{id}":
    "patch":
      "tags":
        - "BoatTrip"
      "summary": "Update"
      "description": "Update values for about boat trip"
      "operationId": "update-boat-Trip"
      "parameters":
        - "name": "id"
          "in": "path"
          "schema":
            "type": "integer"
            "format": "int32"
          "required": true
        - "name": "Title"
          "in": "query"
          "schema":
            "type": "string"
        - "name": "PracticalInformations"
          "in": "query"
          "schema":
            "type": "string"
        - "name": "Type"
          "in": "query"
          "schema":
            "type": "string"
        - "name": "PriceType"
          "in": "query"
          "schema":
            "type": "string"
        - "name": "Dates"
          "in": "query"
          "schema":
            "type": "array"
        - "name": "Times"
          "in": "query"
          "schema":
            "type": "array"
        - "name": "PassengersNumber"
          "in": "query"
          "schema":
            "type": "integer"
            "format": "int32"
        - "name": "Price"
          "in": "query"
          "schema":
            "type": "number"
            "format": "double"
        - "name": "User_id"
          "in": "query"
          "schema":
            "type": "integer"
            "format": "int32"
          "required": true
        - "name": "Boat_id"
          "in": "query"
          "schema":
            "type": "integer"
            "format": "int32"
          "required": true
      responses:
        '200':
          description: Successful update boat trip
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/BoatTrip'
        '400':
          description: Invalid ID supplied
        '404':
          description: Boat trip not found
        '422':
          description: Server was unable to carry out the requested instructions.
    "put":
      "tags":
        - "BoatTrip"
      "summary": "Update"
      "description": "Update values for about boat trip"
      "operationId": "update-boatTrip"
      "parameters":
        - "name": "id"
          "in": "path"
          "schema":
            "type": "integer"
            "format": "int32"
          "required": true
        - "name": "Title"
          "in": "query"
          "schema":
            "type": "string"
        - "name": "PracticalInformations"
          "in": "query"
          "schema":
            "type": "string"
        - "name": "Type"
          "in": "query"
          "schema":
            "type": "string"
        - "name": "PriceType"
          "in": "query"
          "schema":
            "type": "string"
        - "name": "Dates"
          "in": "query"
          "schema":
            "type": "array"
        - "name": "Times"
          "in": "query"
          "schema":
            "type": "array"
        - "name": "PassengersNumber"
          "in": "query"
          "schema":
            "type": "integer"
            "format": "int32"
        - "name": "Price"
          "in": "query"
          "schema":
            "type": "number"
            "format": "double"
        - "name": "User_id"
          "in": "query"
          "schema":
            "type": "integer"
            "format": "int32"
          "required": true
        - "name": "Boat_id"
          "in": "query"
          "schema":
            "type": "integer"
            "format": "int32"
          "required": true
      responses:
        '200':
          description: Successful update boat trip
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/BoatTrip'
        '400':
          description: Invalid ID supplied
        '404':
          description: Boat trip not found
        '422':
          description: Server was unable to carry out the requested instructions.
    "delete":
      "tags":
        - "BoatTrip"
      "summary": "Delete"
      "description": "Delete an boat trip"
      "operationId": "delete-BoatTrip"
      "parameters":
        - "name": "id"
          "in": "path"
          "schema":
            "type": "integer"
            "format": "int32"
          "required": true
      responses:
        '200':
          description: Successful delete boat trip
        '400':
          description: Invalid ID supplied
        '404':
          description: Boat Trip not found
        '422':
          description: Server was unable to carry out the requested instructions.
"components":
  "schemas":
    "User":
      type: object
      properties:
        id:
          type: integer
          format: int32
          examples: [10]
        Lastname:
          type: string
          examples: [Jean]
        FirstName:
          type: string
          examples: [Dupont]
        Birthdate:
          type: string
          examples: [10/01/1956]
        PhoneNumber:
          type: string
          examples: [06.67.08.34.97]
        Address:
          type: string
          examples: [123 avenue Swagger]
        PostalCode:
          type: string
          examples: [00000]
        City:
          type: string
          examples: [Swagger]
        LanguagesSpoken:
          type: array
          examples: [anglais, francais]
        UrlUserPicture:
          type: string
          examples: [/src/mon_image.jpg]
        BoatLicenceNumber:
          type: string
          examples: [mp067nare220978]
        InsuranceNumber:
          type: string
          examples: [067nare220978]
        Status:
          type: string
          examples: [Particulier]
        CompanyName:
          type: string
          examples: [Swagger Building]
        ActivityType:
          type: string
          examples: [Guide de pêche]
        SIRETNumber:
          type: string
          examples: [067nare220978mp]
        RCNumber:
          type: string
          examples: [097nare220978mp]
        BoatsList:
          type: array
          examples: [boat1, boat2]
        FishingBook:
          type: array
          examples: []
        BoatTripsList:
          type: array
          examples: []
        ReservationsList:
          type: array
          examples: []
      xml:
        name: user
    "Boat":
      type: object
      properties:
        id:
          type: integer
          format: int32
          examples: [5]
        Name:
          type: string
          examples: [Boat1]
        Description:
          type: string
          examples: [Lorem Ipsum Boat]
        Brand:
          type: string
          examples: [Boat Brand]
        ProductionYear:
          type: integer
          format: int32
          examples: [1993]
        UrlBoatPicture:
          type: string
          examples: [/src/boatpicture.jpg]
        LicenseType:
          type: string
          examples: [License]
        Type:
          type: string
          examples: [Type]
        Equipements:
          type: array
          examples: []
        CautionAmount:
          type: number
          examples: [10.29]
        CapacityMax:
          type: integer
          format: int32
          examples: [16]
        BedsNumber:
          type: integer
          format: int32
          examples: [16]
        HomePort:
          type: integer
          format: int32
          examples: [Swagger]
        Latitude:
          type: integer
          format: int32
          examples: ['Swagger123']
        Longitude:
          type: integer
          format: int32
          examples: ['Swagger456']
        EgineType:
          type: string
          examples: [Type]
        EginePower:
          type: integer
          format: int32
          examples: [Power]
    "Reservation":
      type: object
      properties:
        id:
          type: integer
          format: int32
          examples: [2]
        BoatTrip_id:
          type: string
          examples: [3]
        ChoosenDate:
          type: string
          format: date
          examples: [20/10/2024]
        SeatsBooked:
          type: integer
          format: int32
          examples: [14]
        TotalPrice:
          type: integer
          format: int32
          examples: [74.50]
        User_id:
          type: integer
          format: int32
          examples: [10]
    "FishingBook":
      type: object
      properties:
        id:
          type: integer
          format: int32
          examples: [2]
        FishName:
          type: integer
          format: int32
          examples: [my fishing book]
        UrlFishPicture:
          type: string
          examples: [/src/fishpicture.jpg]
        Comment:
          type: string
          examples: [Lorem Ipsum]
        Size:
          type: number
          format: double
          examples: [10.5]
        Weight:
          type: number
          format: double
          examples: [10.5]
        FishingPlace:
          type: string
          examples: [Place]
        FishingDate:
          type: string
          format: date
          examples: [20/10/2024]
        ReleasedFish:
          type: boolean
          examples: [true]
        User_id:
          type: integer
          format: int32
          examples: [10]
    "BoatTrip":
      type: object
      properties:
        id:
          type: integer
          format: int32
          examples: [2]
        Title:
          type: string
          examples: [My trip]
        PracticalInformations:
          type: string
          examples: [Lorem Ipsum]
        Type:
          type: string
          examples: [Type]
        PriceType:
          type: string
          examples: [Type]
        Dates:
          type: array
          examples: [20/10/2024, 21/10/2024]
        Times:
          type: array
          examples: [10:00, 14:00]
        PassengersNumber:
          type: integer
          format: int32
          examples: [14]
        Price:
          type: number
          format: double
          examples: [74.50]
        User_id:
          type: integer
          format: int32
          examples: [10]
        Boat_id:
          type: integer
          format: int32
          examples: [5]